---

- name: Create Containerd config directory
  file:
    path: "/etc/containerd"
    state: directory

- name: Get containerd configuration
  command: containerd config default
  register: containerd_config

- name: Save containerd configuration
  copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml

- name: Ensure SystemdCgroup is set to true in containerd config
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup\s*=\s*false'
    replace: '\1SystemdCgroup = true'

- name: Restart Containerd service
  systemd:
    name: containerd
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: kubeadm init --kubernetes-version 1.27.16 --cri-socket unix:///run/containerd/containerd.sock
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: "Enable scheduling on control plane node"
  command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  become: true
  become_user: "{{ansible_user}}"

- name: Enable and check kubelet service
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes

- name: Add K8s CA to list of trusted CAs
  copy:
    src: /etc/kubernetes/pki/ca.crt
    dest: /usr/local/share/ca-certificates/kubernetes-ca.crt
    remote_src: true

- name: Update certificate index
  shell: /usr/sbin/update-ca-certificates

- name: Restart Containerd service
  systemd:
    name: containerd
    daemon_reload: yes
    state: restarted
    enabled: yes
